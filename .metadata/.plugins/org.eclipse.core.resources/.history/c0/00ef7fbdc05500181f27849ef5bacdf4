package com.java.threadsynch;

import java.util.concurrent.locks.ReentrantLock;

public class Display {
		
	ReentrantLock lock = new ReentrantLock();
	
	/*public  static synchronized void wish(Display d , String name){
		
		for (int i = 0; i < 3; i++) {
			
			System.out.print("Good morning : ");
			
				System.out.println(name);
				
		}
		
	}
	
	public  static synchronized void wish3(Display d , String name){
		
		for (int i = 0; i < 3; i++) {
			
			System.out.print("Good morning : ");
			
				System.out.println(name);
				
		}
		
		
	}*/
	
	/*public  static synchronized void wish1(Display d , String name){
		
		for (int i = 0; i < 3; i++) {
			
			System.out.print("Good morning : ");
			
				System.out.println(name);
				
		}
		
	}

	public void wish2(Display display1, String name) {
		
		for (int i = 0; i <3; i++) {
			System.out.print("Good Morning : ");
			
		
			System.out.println(name);
		}
		
	}
*/	
	
	
public  void wish2(Display display1, String name) {
		lock.lock();
		for (int i = 0; i <7; i++) {
			System.out.print("Good Morning : ");
			try {
				Thread.sleep(2000);
			} catch (Exception e) {
			}
		
			System.out.println(name);
		}
		lock.unlock();
}
}
